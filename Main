//Rafaela Brasileiro Vidal - rbv2
//Conversao base 10 para base 2- 29/08/2024 - 7:50
//Conversao base 10 para base 8- 29/08/2024- 16:26
//Conversao base 10 para base 16- 29/08/2024- 17:17
//Conversao base 10 para codigo BCD- 30/08/2024 - 11:15
//Conversão base 10 para base com sinal com 16 bits, (complemento a 2) - 30/08/2024 18:21

/*
Construa uma calculadora programador didática (didática significa que deve ser mostrado os passos na tela das operações efetuadas),  implementada na linguagem C, que tenha as seguintes conversões
1 - de base 10 para:
a)base 2,
b) base 8,
c) base16, 
d) código BCD

2 - de base 10  para base com sinal com 16 bits, (complemento a 2)
3 - converter real em decimal para float e double, mostrando os respectivos bits de sinal , expoente, expoente com viés e fração
*/

#include <stdio.h>
#include <stdlib.h>

typedef struct node{
  int num;
  struct node *prox;
} node;

void empilhar(node **head, int num);
void imprimirPilha(node *head);
void base2(int num);
void base8(int num);
void base16(int num);
void codigobcd (int num);
int decprabin (int digito);
void complementoDois(int num);


int main(void){

  int menu=1, base=0, num=0;
  node *head=NULL;
  
  printf("Calculadora didática em C\n\n");

  while (menu==1 || menu ==2 || menu ==3 || menu ==4){
    
    printf("\n\nDigite o número da operação desejada:\n\n1- Converter número de base 10 para base 2, base 8, base 16 ou código BCD\n2- Converter número de base 10 para base com sinal com 16 bits, (complemento a 2)\n3- Converter real em decimal para float e double, mostrando os respectivos bits de sinal , expoente, expoente com viés e fração\n4- Encerrar programa\n");
    
    scanf("%d", &menu);

    if (menu==1){
      
      printf("\nEscolha o número referente a base para a qual deseja converter:\n1- Base 2\n2- Base 8\n3- Base 16\n4- Código BCD\n");
      scanf("%d", &base);

      printf("\nDigite o número que deseja converter:\n");
      scanf("%d", &num);
      
      if(base==1){
        base2(num);
      }
      else if(base==2){
        base8(num);
      }
      else if(base==3){
        base16(num);
      }
      else if(base==4){
        codigobcd (num);
      }
    }
    else if (menu==2){
      printf("\nDigite o número que deseja converter:\n");
      scanf("%d", &num);
      complementoDois(num);
    }
    else if (menu==3){

    }
    else if (menu==4){
      break;
    }
  }
}



void empilhar(node **head, int num){
  node *novo=(node *)malloc(sizeof(node));
  if(novo!=NULL){
    novo->num=num;
    novo->prox=*head;
    *head=novo;
  }
}


void imprimirPilha(node *head){
  while (head!=NULL){
    printf("%d", head->num);
    head=head->prox;
  }
}

void imprimirhexa(node *head){
  char hexa;
  while (head!=NULL){
    if (head->num>=10){
      switch (head->num){
        case 10:
          hexa = 'A';
          break;
        case 11:
          hexa = 'B';
          break;
        case 12:
          hexa = 'C';
          break;
        case 13:
          hexa = 'D';
          break;
        case 14:
          hexa = 'E';
          break;
        case 15:
          hexa = 'F';
          break;
      }
      printf("%c", hexa);
    }
    else{
      printf("%d", head->num);
    }
    head=head->prox;
  }
}


void base2(int num){

  int divisao=0, resto=0, inicial=num;
  node *head=NULL;
  printf("\n");

  while(num!=0){

    divisao=num/2;
    resto=num%2;
    printf("%d/2 = %d, resto=%d\n ", num, divisao, resto);

    empilhar(&head, resto);
    num=divisao;
  }

  printf("\n%d na base 10 é igual a ", inicial);
  imprimirPilha(head);
  printf(" na base 2\n");
}


void base8(int num){

  int divisao=0, resto=0, inicial=num;
  node *head=NULL;
  printf("\n");

  while(num!=0){

    divisao=num/8;
    resto=num%8;
    printf("%d/8 = %d, resto=%d\n ", num, divisao, resto);

    empilhar(&head, resto);
    num=divisao;
  }

  printf("\n%d na base 10 é igual a ", inicial);
  imprimirPilha(head);
  printf(" na base 8\n");
}

void base16(int num){

  int divisao=0, resto=0, inicial=num;
  char hexa;
  node *head=NULL;
  printf("\n");

  while(num!=0){

    divisao=num/16;
    resto=num%16;
    
    if (resto>=10 && resto<=15){
      switch (resto) {
        case 10:
          hexa = 'A';
          break;
        case 11:
          hexa = 'B';
          break;
        case 12:
          hexa = 'C';
          break;
        case 13:
          hexa = 'D';
          break;
        case 14:
          hexa = 'E';
          break;
        case 15:
          hexa = 'F';
          break;
      }
      
      printf("%d/16 = %d, resto = %d(%c)\n ", num, divisao, resto, hexa);
      empilhar(&head, resto);
      num=divisao;  
    }
    else{
      printf("%d/16 = %d, resto=%d\n ", num, divisao, resto);
      empilhar(&head, resto);
      num=divisao;
    }
  }
  printf("\n%d na base 10 é igual a ", inicial);
  imprimirhexa(head);
  printf(" na base 16\n\n");
}


void codigobcd (int num){

  int digito;
  node *head = NULL;

  printf("\n%d na base 10 é igual a ", num);

  while (num > 0) {
      digito = num % 10; 
      empilhar(&head, decprabin(digito));
      num /= 10; 
  }

  while (head != NULL) {
      printf("%04d ", head->num);
      head = head->prox;
  }
  printf("em código BCD\n");
}


int decprabin (int digito){
  int binario = 0, posicao = 1;

  while (digito > 0) {
      binario += (digito % 2) * posicao;
      digito /= 2;
      posicao *= 10;
  }
  return binario;
}

void complementoDois(int num) {
    unsigned short int resultado;

    
    if (num < 0) {
        resultado = (unsigned short int)(~(-num) + 1);
    } else {
        resultado = (unsigned short int)num;
    }

    
    printf("O complemento a 2 de %d em 16 bits é: ", num);
    for (int i = 15; i >= 0; i--) {
        printf("%d", (resultado >> i) & 1);
    }
    printf("\n");
}
